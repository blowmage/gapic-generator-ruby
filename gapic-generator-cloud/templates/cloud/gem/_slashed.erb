<%- assert_locals gem -%>
<% @requires = capture do %>
require "gapic/config"
<% end %>
##
# <%= gem.summary %>
module <%= gem.namespace.split("::")[-1] %>
  ##
  # Default configuration for the <%= gem.name %> gem.
  #
  # @yield [config] Configure the <%= gem.name %> gem.
  # @yieldparam config [<%= gem.namespace %>::Configuration]
  #
  # @return [<%= gem.namespace %>::Configuration]
  #
  def self.configure
    @configure ||= <%= gem.namespace %>::Configuration.new
    yield @configure if block_given?
    @configure
  end

  ##
  # Configuration class for the <%= gem.name %> gem.
  class Configuration
    extend Gapic::Config

    config_attr :credentials,  nil do |value|
      allowed = [::String, ::Hash, ::Proc, ::Google::Auth::Credentials, ::Signet::OAuth2::Client, nil]
      allowed += [::GRPC::Core::Channel, ::GRPC::Core::ChannelCredentials] if defined? ::GRPC
      allowed.any? { |klass| klass === value }
    end
    config_attr :lib_name,     nil, String, nil
    config_attr :lib_version,  nil, String, nil
    config_attr :interceptors, nil, Array, nil
    config_attr :timeout,      nil, Numeric, nil
    config_attr :metadata,     nil, Hash, nil
    config_attr :retry_policy, nil, Hash, Proc, nil
  end
end
