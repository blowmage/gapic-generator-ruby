<%= render partial: "shared/license" %>

require "bundler/setup"
require "bundler/gem_tasks"

require "rubocop/rake_task"
RuboCop::RakeTask.new

require "rake/testtask"
desc "Run tests."
Rake::TestTask.new do |t|
  t.test_files = FileList["test/**/*_test.rb"]
  t.warning = false
end

namespace :test do
  desc "Runs tests with coverage."
  task :coverage do
    require "simplecov"
    SimpleCov.start do
      command_name "<%= gem_name api %>"
      track_files "lib/**/*.rb"
      add_filter "test/"
    end

    Rake::Task[:test].invoke
  end
end

desc "Runs the smoke tests."
desc "Runs the smoke tests."
Rake::TestTask.new :smoke_test do |t|
  t.test_files = FileList["acceptance/**/*smoke_test.rb"]
  t.warning = false
end

namespace :smoke_test do
  desc "Runs smoke tests with coverage."
  task :coverage do
    require "simplecov"
    SimpleCov.start do
      command_name "<%= gem_name api %>"
      track_files "lib/**/*.rb"
      add_filter "test/"
    end

    Rake::Task[:smoke_test].invoke
  end
end

# Acceptance tests
desc "Run the <%= gem_name api %> acceptance tests."
task :acceptance, :project, :keyfile do |t, args|
  project = args[:project]
  project ||=
    ENV["<%= service.name.upcase %>_TEST_PROJECT"] ||
    ENV["GCLOUD_TEST_PROJECT"]
  keyfile = args[:keyfile]
  keyfile ||=
    ENV["<%= service.name.upcase %>_TEST_KEYFILE"] ||
    ENV["GCLOUD_TEST_KEYFILE"]
  if keyfile
    keyfile = File.read keyfile
  else
    keyfile ||=
      ENV["<%= service.name.upcase %>_TEST_KEYFILE_JSON"] ||
      ENV["GCLOUD_TEST_KEYFILE_JSON"]
  end
  if project.nil? || keyfile.nil?
    fail "You must provide a project and keyfile. e.g. rake acceptance[test123, /path/to/keyfile.json] or <%= service.name.upcase %>_TEST_PROJECT=test123 <%= service.name.upcase %>_TEST_KEYFILE=/path/to/keyfile.json rake acceptance"
  end
  require "<%= credentials_require service %>"
  (<%= client_name_full service %>::PATH_ENV_VARS +
   <%= client_name_full service %>::JSON_ENV_VARS).each do |path|
    ENV[path] = nil
  end
  ENV["<%= service.name.upcase %>_PROJECT"] = project
  ENV["<%= service.name.upcase %>_TEST_PROJECT"] = project
  ENV["<%= service.name.upcase %>_KEYFILE_JSON"] = keyfile

  Rake::Task["acceptance:run"].invoke
end

namespace :acceptance do
  Rake::TestTask.new :run do |t|
    t.libs << "acceptance"
    t.test_files = FileList["acceptance/**/*_test.rb"]
    t.warning = false
  end

  desc "Run acceptance tests with coverage."
  task :coverage do
  end

  desc "Run acceptance cleanup."
  task :cleanup do
  end
end

require "yard"
require "yard/rake/yardoc_task"
YARD::Rake::YardocTask.new

desc "Run yard-doctest example tests."
task :doctest do
  puts "The <%= gem_name api %> gem does not have doctest tests."
end

desc "Run the CI build"
task :ci do
  header "BUILDING <%= gem_name api %>"
  header "<%= gem_name api %> rubocop", "*"
  Rake::Task[:rubocop].invoke
  header "<%= gem_name api %> doctest", "*"
  Rake::Task[:doctest].invoke
  header "<%= gem_name api %> test", "*"
  Rake::Task[:test].invoke
end

namespace :ci do
  desc "Run the CI build, with acceptance tests."
  task :acceptance do
    Rake::Task[:ci].invoke
    header "<%= gem_name api %> acceptance", "*"
    Rake::Task[:acceptance].invoke
  end
  task :a do
    # This is a handy shortcut to save typing
    Rake::Task["ci:acceptance"].invoke
  end
end

task :default => :test

def header str, token = "#"
  line_length = str.length + 8
  puts ""
  puts token * line_length
  puts "#{token * 3} #{str} #{token * 3}"
  puts token * line_length
  puts ""
end
