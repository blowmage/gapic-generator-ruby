# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


require "bundler/setup"
require "bundler/gem_tasks"

require "rubocop/rake_task"
RuboCop::RakeTask.new

require "rake/testtask"
desc "Run tests."
Rake::TestTask.new do |t|
  t.test_files = FileList["test/**/*_test.rb"]
  t.warning = false
end

namespace :test do
  desc "Runs tests with coverage."
  task :coverage do
    require "simplecov"
    SimpleCov.start do
      command_name "google-showcase"
      track_files "lib/**/*.rb"
      add_filter "test/"
    end

    Rake::Task[:test].invoke
  end
end

desc "Runs the smoke tests."
desc "Runs the smoke tests."
Rake::TestTask.new :smoke_test do |t|
  t.test_files = FileList["acceptance/**/*smoke_test.rb"]
  t.warning = false
end

namespace :smoke_test do
  desc "Runs smoke tests with coverage."
  task :coverage do
    require "simplecov"
    SimpleCov.start do
      command_name "google-showcase"
      track_files "lib/**/*.rb"
      add_filter "test/"
    end

    Rake::Task[:smoke_test].invoke
  end
end

# Acceptance tests
desc "Run the google-showcase acceptance tests."
task :acceptance, :project, :keyfile do |_t, args|
  project = args[:project]
  project ||= ENV["SHOWCASE_TEST_PROJECT"]
  keyfile = args[:keyfile]
  keyfile ||= ENV["SHOWCASE_TEST_CREDENTIALS"]
  if keyfile
    keyfile = File.read keyfile
  else
    keyfile ||= ENV["SHOWCASE_TEST_CREDENTIALS_JSON"]
  end
  if project.nil? || keyfile.nil?
    raise "You must provide a project and keyfile. e.g. rake acceptance[test123, /path/to/keyfile.json] or SHOWCASE_TEST_PROJECT=test123 SHOWCASE_TEST_KEYFILE=/path/to/keyfile.json rake acceptance"
  end

  ENV["SHOWCASE_CREDENTIALS"] = nil
  ENV["SHOWCASE_KEYFILE"] = nil

  ENV["SHOWCASE_CREDENTIALS_JSON"] = nil
  ENV["SHOWCASE_KEYFILE_JSON"] = nil

  ENV["SHOWCASE_PROJECT"] = project
  ENV["SHOWCASE_CREDENTIALS_JSON"] = keyfile

  Rake::Task["acceptance:run"].invoke
end

namespace :acceptance do
  Rake::TestTask.new :run do |t|
    t.libs << "acceptance"
    t.test_files = FileList["acceptance/**/*_test.rb"]
    t.warning = false
  end

  desc "Run acceptance tests with coverage."
  task :coverage do
  end

  desc "Run acceptance cleanup."
  task :cleanup do
  end
end

require "yard"
require "yard/rake/yardoc_task"
YARD::Rake::YardocTask.new

desc "Run yard-doctest example tests."
task :doctest do
  puts "The google-showcase gem does not have doctest tests."
end

desc "Run the CI build"
task :ci do
  header "BUILDING google-showcase"
  header "google-showcase rubocop", "*"
  Rake::Task[:rubocop].invoke
  header "google-showcase doctest", "*"
  Rake::Task[:doctest].invoke
  header "google-showcase test", "*"
  Rake::Task[:test].invoke
end

namespace :ci do
  desc "Run the CI build, with acceptance tests."
  task :acceptance do
    Rake::Task[:ci].invoke
    header "google-showcase acceptance", "*"
    Rake::Task[:acceptance].invoke
  end
  task :a do
    # This is a handy shortcut to save typing
    Rake::Task["ci:acceptance"].invoke
  end
end

task default: :test

def header str, token = "#"
  line_length = str.length + 8
  puts ""
  puts token * line_length
  puts "#{token * 3} #{str} #{token * 3}"
  puts token * line_length
  puts ""
end
