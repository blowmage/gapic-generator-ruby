# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

require "grpc"
require "google/showcase/v1alpha3/messaging_pb"

module Google
  module Showcase
    module V1alpha3
      module Messaging
        # A simple messaging service that implements chat rooms and profile posts.
        #
        # This messaging service showcases the features that API clients
        # generated by gapic-generators implement.
        class Service
          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = "google.showcase.v1alpha3.Messaging"

          # Creates a room.
          rpc :CreateRoom,
              Google::Showcase::V1alpha3::CreateRoomRequest,
              Google::Showcase::V1alpha3::Room

          # Retrieves the Room with the given resource name.
          rpc :GetRoom,
              Google::Showcase::V1alpha3::GetRoomRequest,
              Google::Showcase::V1alpha3::Room

          # Updates a room.
          rpc :UpdateRoom,
              Google::Showcase::V1alpha3::UpdateRoomRequest,
              Google::Showcase::V1alpha3::Room

          # Deletes a room and all of its blurbs.
          rpc :DeleteRoom,
              Google::Showcase::V1alpha3::DeleteRoomRequest,
              Google::Protobuf::Empty

          # Lists all chat rooms.
          rpc :ListRooms,
              Google::Showcase::V1alpha3::ListRoomsRequest,
              Google::Showcase::V1alpha3::ListRoomsResponse

          # Creates a blurb. If the parent is a room, the blurb is understood to be a
          # message in that room. If the parent is a profile, the blurb is understood
          # to be a post on the profile.
          rpc :CreateBlurb,
              Google::Showcase::V1alpha3::CreateBlurbRequest,
              Google::Showcase::V1alpha3::Blurb

          # Retrieves the Blurb with the given resource name.
          rpc :GetBlurb,
              Google::Showcase::V1alpha3::GetBlurbRequest,
              Google::Showcase::V1alpha3::Blurb

          # Updates a blurb.
          rpc :UpdateBlurb,
              Google::Showcase::V1alpha3::UpdateBlurbRequest,
              Google::Showcase::V1alpha3::Blurb

          # Deletes a blurb.
          rpc :DeleteBlurb,
              Google::Showcase::V1alpha3::DeleteBlurbRequest,
              Google::Protobuf::Empty

          # Lists blurbs for a specific chat room or user profile depending on the
          # parent resource name.
          rpc :ListBlurbs,
              Google::Showcase::V1alpha3::ListBlurbsRequest,
              Google::Showcase::V1alpha3::ListBlurbsResponse

          # This method searches through all blurbs across all rooms and profiles
          # for blurbs containing to words found in the query. Only posts that
          # contain an exact match of a queried word will be returned.
          rpc :SearchBlurbs,
              Google::Showcase::V1alpha3::SearchBlurbsRequest,
              Google::Longrunning::Operation

          # This returns a stream that emits the blurbs that are created for a
          # particular chat room or user profile.
          rpc :StreamBlurbs,
              Google::Showcase::V1alpha3::StreamBlurbsRequest,
              stream(Google::Showcase::V1alpha3::StreamBlurbsResponse)

          # This is a stream to create multiple blurbs. If an invalid blurb is
          # requested to be created, the stream will close with an error.
          rpc :SendBlurbs,
              stream(Google::Showcase::V1alpha3::CreateBlurbRequest),
              Google::Showcase::V1alpha3::SendBlurbsResponse

          # This method starts a bidirectional stream that receives all blurbs that
          # are being created after the stream has started and sends requests to create
          # blurbs. If an invalid blurb is requested to be created, the stream will
          # close with an error.
          rpc :Connect,
              stream(Google::Showcase::V1alpha3::ConnectRequest),
              stream(Google::Showcase::V1alpha3::StreamBlurbsResponse)
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
